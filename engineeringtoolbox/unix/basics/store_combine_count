HOW TO STORE a command in a file: ( > )

    - tail -n 5 seasonal/winter.csv > last.csv

    Here we are storing the 5 last rows of the file
    winter.csv into a file called "last.csv"


    - head -n 5 seasonal/summer.csv | tail -n 3

    The pipe symbol tells the shell to use the output of the command 
    on the left as the input to the command on the right.


    it also works for pipelines

COMBINING COMMANDS: ( | )

    Use cut to select all of the tooth names from 
    column 2 of the comma delimited 
    file seasonal/summer.csv, then pipe the result 
    to grep, with an inverted match, 
    to exclude the header line containing the word 
    "Tooth"

    = cut -d, -f 2 seasonal/summer.csv | grep -v Tooth

COUNT RECORDS IN A FILE: ( wc , "word count")

    prints the number of characters, words, and lines 
    in a file. You can make it print only one 
    of these using -c, -w, or -l respectively.

SLICING TO GET ALL FILES WITH THE SAME SLICE:

    if you want to use the command "head" in 2 files
    with the same initial letter stored in a 
    directory called "seasonal", but there you have
    4 files "autumn, summer, winter, spring".csv.

    = head seasonal/s*.csv

MATCH OPERATORS:

    ? matches a single character, so 201?.txt 
    will match 2017.txt or 2018.txt, but not 2017-01.txt.

    [...] matches any one of the characters inside the square 
    brackets, so 201[78].txt matches 2017.txt 
    or 2018.txt, but not 2016.txt.


    {...} matches any of the comma-separated patterns inside 
    the curly brackets, so {*.txt, *.csv} matches any file whose 
    name ends with .txt or .csv, but not files whose names 
    end with .pdf.


    